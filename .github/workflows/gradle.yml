name: 构建52学习Android APP

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置Java 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 设置Android SDK
      uses: android-actions/setup-android@v3
      with:
        packages: 'platforms;android-27 build-tools;27.0.3 platform-tools'
        accept-android-sdk-licenses: true
        
    - name: 创建local.properties
      shell: bash
      run: |
        echo "=== 创建local.properties ==="
        echo "sdk.dir=$ANDROID_HOME" > local.properties
        echo "=== 验证local.properties内容 ==="
        cat local.properties
      
    - name: 创建Gradle Wrapper文件
      shell: bash
      run: |
        echo "=== 创建gradle/wrapper目录 ==="
        mkdir -p gradle/wrapper
        
        echo "=== 下载gradle-wrapper.jar ==="
        curl -L -o gradle/wrapper/gradle-wrapper.jar \
          https://github.com/gradle/gradle/raw/v6.8.3/gradle/wrapper/gradle-wrapper.jar
        
        echo "=== 创建gradle-wrapper.properties ==="
        cat > gradle/wrapper/gradle-wrapper.properties << 'EOF'
        distributionBase=GRADLE_USER_HOME
        distributionPath=wrapper/dists
        distributionUrl=https\://services.gradle.org/distributions/gradle-6.8.3-bin.zip
        zipStoreBase=GRADLE_USER_HOME
        zipStorePath=wrapper/dists
        EOF
        
        echo "=== 创建gradlew脚本（修复JVM参数）==="
        cat > gradlew << 'EOF'
        #!/bin/bash
        
        # 正确的JVM参数设置
        DEFAULT_JVM_OPTS="-Xmx512m -Xms256m"
        
        # 脚本设置
        APP_NAME="Gradle"
        APP_BASE_NAME=${0##*/}
        APP_HOME=$( cd "${BASH_SOURCE[0]%/*}" && pwd )
        CLASSPATH="$APP_HOME/gradle/wrapper/gradle-wrapper.jar"
        
        # 查找Java
        if [ -n "$JAVA_HOME" ] ; then
            JAVACMD="$JAVA_HOME/bin/java"
        else
            JAVACMD="java"
        fi
        
        # 执行Gradle
        exec "$JAVACMD" $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \
            -classpath "$CLASSPATH" \
            org.gradle.wrapper.GradleWrapperMain \
            "$@"
        EOF
        
        chmod +x gradlew
        
        echo "=== 验证文件创建 ==="
        ls -la gradlew
        ls -la gradle/wrapper/
        
    - name: 验证Gradle环境
      shell: bash
      run: |
        echo "=== 验证Java环境 ==="
        echo "JAVA_HOME: $JAVA_HOME"
        java -version
        
        echo "=== 验证Gradle Wrapper ==="
        ./gradlew --version
        
    - name: 构建调试APK
      shell: bash
      run: |
        echo "=== 开始构建APK ==="
        ./gradlew assembleDebug --stacktrace --info --no-daemon
      
    - name: 查找生成的APK
      shell: bash
      run: |
        echo "=== 查找所有APK文件 ==="
        find . -name "*.apk" -type f || echo "未找到APK文件"
        echo "=== 构建输出目录 ==="
        ls -la app/build/outputs/ || echo "构建输出目录不存在"
        
    - name: 上传调试APK
      uses: actions/upload-artifact@v4
      with:
        name: 52学习-debug-apk
        path: |
          app/build/outputs/apk/debug/*.apk
          **/*.apk
        if-no-files-found: warn
